// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MValidationMessage should render correctly when it is in error 1`] = `
<div class="m-validation-message">
  <div class="m-validation-message__wrap">
    <p class="m-validation-message__error"><svg width="20px" height="20px" class="m-icon m-validation-message__error__icon">
        <title>Error</title>
        <use aria-hidden="true"></use>
      </svg> <span class="m-validation-message__text">error</span></p>
  </div>
</div>
`;

exports[`MValidationMessage should render correctly when it is in error 2`] = `
<div class="m-validation-message">
  <div class="m-validation-message__wrap">
    <p class="m-validation-message__error"><svg width="20px" height="20px" class="m-icon m-validation-message__error__icon">
        <title>Error</title>
        <use aria-hidden="true"></use>
      </svg> <span class="m-validation-message__text">error</span></p>
  </div>
</div>
`;

exports[`MValidationMessage should render correctly when it is valid 1`] = `
<div class="m-validation-message">
  <div class="m-validation-message__wrap">
    <p class="m-validation-message__valid"><svg width="20px" height="20px" class="m-icon m-validation-message__valid__icon">
        <title>Valid</title>
        <use aria-hidden="true"></use>
      </svg> <span class="m-validation-message__text">valid</span></p>
  </div>
</div>
`;

exports[`MValidationMessage should render error message even if there is a valid message 1`] = `
<div class="m-validation-message">
  <div class="m-validation-message__wrap">
    <p class="m-validation-message__error"><svg width="20px" height="20px" class="m-icon m-validation-message__error__icon">
        <title>Error</title>
        <use aria-hidden="true"></use>
      </svg> <span class="m-validation-message__text">error</span></p>
  </div>
</div>
`;

exports[`MValidationMessage should render helper message when prop is set 1`] = `
<div class="m-validation-message">
  <div class="m-validation-message__wrap">
    <p class="m-validation-message__helper">help</p>
  </div>
</div>
`;
