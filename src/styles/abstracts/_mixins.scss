@mixin m-scrollbar() {
    scrollbar-face-color: $m-color--scrollbar;
    scrollbar-shadow-color: $m-color--scrollbar;
    scrollbar-highlight-color: $m-color--white;
    scrollbar-darkshadow-color: $m-color--white;
    scrollbar-track-color: $m-color--white;
    scrollbar-arrow-color: $m-color--scrollbar;

    &::-webkit-scrollbar {
        width: $m-scrollbar-width;
        height: $m-scrollbar-width;
        background: none;

        &-track-piece {
            background: $m-color--scrollbar-light;
        }

        &-thumb {
            background: $m-color--scrollbar;
        }
    }
}

@mixin m-visually-hidden() {
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
    height: 1px;
    width: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
}

@mixin m-is-ie() {
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        @content;
    }

    @media screen and (min-width: 0\0) {
        @content;
    }
}

@mixin m-word-wrap() {
    overflow-wrap: break-word;
    word-break: break-word;
    hyphens: auto;
}

@mixin m-button() {
    transition-property: background, border-color, color;
    transition-duration: 0.3s;
    transition-timing-function: ease;
    border: 1px solid $m-color--interactive;
    appearance: none;
    outline: none;
    user-select: none;
    text-decoration: none;
    line-height: 1;
}

@mixin m-button--primary() {
    color: $m-color--white;
    background: $m-color--interactive;
}

@mixin m-button--secondary() {
    color: $m-color--interactive;
    background: $m-color--white;
}

@mixin m-button--waiting() {
    cursor: progress;
    color: $m-color--white;
    background: $m-color--interactive-lighter;
    border-color: $m-color--interactive-lighter;
}

@mixin m-button--disabled() {
    cursor: not-allowed;
    color: $m-color--disabled;
    background: $m-color--white;
    border-color: $m-color--disabled;
}

@mixin m-button--hover() {
    cursor: pointer;

    &:hover,
    &:focus {
        color: $m-color--white;
        background: $m-color--interactive-light;
        border-color: $m-color--interactive-light;
    }

    &:active {
        color: $m-color--white;
        background: $m-color--interactive-dark;
        border-color: $m-color--interactive-dark;
    }
}

@mixin m-bullet-list() {
    &,
    ul {
        padding: 0 0 0 $m-margin--l;
    }

    ul {
        margin: 0;
    }

    li {
        position: relative;
        list-style: none;
        margin: 0 0 $m-padding--xs 0;

        &::before {
            position: absolute;
            top: 8px; // Magic number
            left: - $m-margin; // Magic number
            content: '';
            transform: translate3d(-50%, 0, 0);
        }

        &:last-child {
            margin: 0;
        }

        > ul {
            margin: $m-padding--xs 0 0 0;
        }
    }

    > li {
        > ul > li::before,
        &::before,
        > ul > li > ul > li::before,
        > ul > li > ul > li > ul > li::before {
            width: 4px;
            height: 4px;
        }

        > ul > li::before,
        &::before {
            border-radius: 50%;
            border: 1px solid $m-color--grey-dark;
        }

        &::before,
        > ul > li > ul > li::before {
            background: $m-color--grey-dark;
        }

        > ul > li > ul > li::before,
        > ul > li > ul > li > ul > li::before {
            border: 1px solid $m-color--grey-dark;
        }

        > ul > li > ul > li > ul > li > ul > li::before {
            width: 0;
            height: 0;
            border-style: solid;
            border-width: 3px 0 3px 4px;
            border-color: rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) $m-color--grey-dark;
        }
    }
}

@mixin m-table() {
    width: 100%;
    border-collapse: collapse;
    table-layout: fixed; // AEL-33

    th {
        padding: 0 $m-padding--s $m-margin--s;
        font-weight: $m-font-weight--bold;
        color: $m-color--black;
        border-bottom: 2px solid $m-color--border;
        text-align: left;

        &:first-child {
            padding-left: $m-padding;
        }

        &:last-child {
            padding-right: $m-padding;
        }
    }

    tbody {
        tr {
            border-bottom: 1px solid $m-color--border;
        }
    }

    td {
        padding: $m-padding $m-padding--s;
        margin: 1px 0;
        vertical-align: top;
        text-align: left;

        &:first-child {
            padding-left: $m-padding;
        }

        &:last-child {
            padding-right: $m-padding;
        }
    }

    &.m-u--has-icon {
        th,
        td {
            &:last-child:not(:only-child) {
                padding: 0;
                width: 44px;
                text-align: center;
                vertical-align: middle;
            }
        }
    }

    // when inside a m-panel component
    .m-panel & {
        tbody {
            tr:last-child {
                border-bottom: 0;
            }
        }
    }
}

@mixin m-box-padding($topBottom: $m-padding--l, $rightLeft: $m-padding--l) {
    &:not(.m--no-padding) {
        @if ($topBottom >= $m-padding && $topBottom >= $m-padding--s) {
            @media (max-width: $m-mq--max--s) {
                padding: #{$topBottom/2} #{$rightLeft/2};
            }

            @media (min-width: $m-mq--min--s) {
                padding: $topBottom $rightLeft;
            }
        }

        @else {
            @if ($topBottom <= $m-padding) {
                padding-top: $m-padding;
                padding-bottom: $m-padding;
            }

            @else {
                @media (max-width: $m-mq--max--s) {
                    padding-top: $topBottom/2;
                    padding-bottom: $topBottom/2;
                }

                @media (min-width: $m-mq--min--s) {
                    padding-top: $topBottom;
                    padding-bottom: $topBottom;
                }
            }

            @if ($topBottom <= $m-padding--s) {
                padding-right: $m-padding--s;
                padding-left: $m-padding--s;
            }

            @else {
                @media (max-width: $m-mq--max--s) {
                    padding-right: $rightLeft/2;
                    padding-left: $rightLeft/2;
                }

                @media (min-width: $m-mq--min--s) {
                    padding-right: $rightLeft;
                    padding-left: $rightLeft;
                }
            }
        }
    }
}

@mixin m-triangle($m-direction, $m-color: currentcolor, $m-size: 1em) {
    @if not index(top right bottom left, $m-direction) {
        @error "Direction must be either `top`, `right`, `bottom` or `left`.";
    }

    $m-size: $m-size/2;
    $m-transparent: rgba(0, 0, 0, 0);
    $m-opposite: (top:bottom, right:left, left:right, bottom:top);

    content: '';
    display: inline-block;
    width: 0;
    height: 0;
    border: $m-size solid $m-transparent;
    border-#{map-get($m-opposite, $m-direction)}-color: $m-color;
    border-#{map-get($m-opposite, $m-direction)}-width: $m-size/1.5;
}
